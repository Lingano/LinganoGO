basePath: /api
definitions:
  handlers.AddSavedWordRequest:
    properties:
      context:
        type: string
      definition:
        type: string
      reading_id:
        type: string
      word:
        type: string
    type: object
  handlers.RegisterRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  handlers.UpdateUserProfileRequest:
    properties:
      bio:
        type: string
      profile_picture:
        type: string
    type: object
  handlers.UserProfileResponse:
    properties:
      email:
        type: string
      id:
        type: string
      name:
        type: string
      profile:
        $ref: '#/definitions/models.UserProfile'
    type: object
  models.ErrorResponse:
    properties:
      error:
        example: Invalid request payload
        type: string
    type: object
  models.SavedWord:
    properties:
      context:
        type: string
      date_saved:
        type: string
      definition:
        type: string
      id:
        type: string
      reading_id:
        description: Or primitive.ObjectID if it references another collection
        type: string
      word:
        type: string
    type: object
  models.UserProfile:
    properties:
      bio:
        type: string
      date_joined:
        type: string
      last_login:
        type: string
      profile_picture:
        type: string
    type: object
  models.UserResponse:
    properties:
      email:
        example: jane@example.com
        type: string
      id:
        example: 647fae34ed23eebd76f12345
        type: string
      name:
        example: Jane
        type: string
    type: object
host: api2.lingano.live
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is the API for LinganoGO application.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: LinganoGO API
  version: "1.0"
paths:
  /api/auth/register:
    post:
      consumes:
      - application/json
      description: Creates a new user account
      parameters:
      - description: User info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handlers.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Register a new user
      tags:
      - Auth
  /api/user/profile:
    get:
      consumes:
      - application/json
      description: Fetches and returns the authenticated user's profile information
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.UserProfileResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get user profile
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Updates the authenticated user's profile information
      parameters:
      - description: Profile update info
        in: body
        name: profile
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateUserProfileRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.UserProfileResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update user profile
      tags:
      - User
  /api/user/saved-words:
    get:
      consumes:
      - application/json
      description: Fetches and returns the authenticated user's saved words list
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.SavedWord'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get saved words
      tags:
      - User
    post:
      consumes:
      - application/json
      description: Adds a new word to the authenticated user's saved words list
      parameters:
      - description: Word to save
        in: body
        name: word
        required: true
        schema:
          $ref: '#/definitions/handlers.AddSavedWordRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.SavedWord'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Add saved word
      tags:
      - User
  /api/user/saved-words/{savedWordID}:
    delete:
      consumes:
      - application/json
      description: Removes a word from the authenticated user's saved words list
      parameters:
      - description: Saved Word ID
        in: path
        name: savedWordID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete saved word
      tags:
      - User
schemes:
- https
- http
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
