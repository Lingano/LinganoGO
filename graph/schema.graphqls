enum Role {
    USER
    ADMIN
}

type User {
    id: ID!
    name: String!
    email: String!
    role: Role!
}

type Reading {
    id: ID!
    title: String!
    user: User!
    finished: Boolean!
    public: Boolean!
}

type Query {
    user(id: ID!): User
    users: [User!]!
    admins: [User!]!
    readings: [Reading!]!
    publicReadings: [Reading!]!
    userReadings(userID: ID!): [Reading!]!
}

input NewReading {
    title: String!
    userID: ID!
    public: Boolean = false
}

input NewUser {
    name: String!
    email: String!
    password: String!
}

type Mutation {
    createUser(input: NewUser!): User!
    createReading(input: NewReading!): Reading!
    updateReadingPublicStatus(id: ID!, public: Boolean!): Reading!
}
